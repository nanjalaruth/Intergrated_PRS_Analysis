//def prs_ids = "/Users/rnanjala/Desktop/Polygenic_Risk_Scores/rbc_PGS_score_ids.txt"

// Define the list of blood cell names
def bloodCells = ["lymph","mcv","hct","hgb","plt","neu", "mono","mpv",
    "mchc", "baso", "mch", "wbc", "rbc", "rdw", "eos"]
//def bloodCells = ["lymph","mcv","hct","hgb","plt","neu", "mono","mpv",
   // "mchc", "baso", "mch", "wbc", "rbc", "rdw", "eos"]

// Define the path to the directory containing the phenotype files
def basePath = "/Users/rnanjala/Desktop/Polygenic_Risk_Scores/all_blood_traits_prs_scores"

// List to store phenotype paths
def pheno_list = []
def pheno_file = []

// Iterate over each blood cell
bloodCells.each { cell ->
    // Path to the phenotype file for each blood cell
    def phenotype_file = ["${cell}", "${basePath}/${cell}_pheno.tsv"]
    pheno_file.add(phenotype_file)

    // Path to the PRS ids file for the current blood cell
    def prs_ids = "${basePath}/${cell}_PGS_score_ids.txt"
    
    // Read the PRS ids file and generate phenotype paths
    new File(prs_ids).eachLine { line ->
        // Concatenate the constant path with the blood cell name and the phenotype file name
        def phenotype_path = ["${cell}", line.trim(), "${basePath}/${cell}_pheno.tsv"]
        pheno_list.add(phenotype_path)
    }
}

params{

    pheno = pheno_list

    phenotype = pheno_file

    reference = "/Users/rnanjala/Desktop/Polygenic_Risk_Scores/snp_info_header.txt"

    covariate = "/Users/rnanjala/Desktop/Polygenic_Risk_Scores/uganda.cov"

    trait = "/Users/rnanjala/Desktop/Polygenic_Risk_Scores/Ugandacardio.csv"
    
    plink_file = [
        ['UGRC', '/Users/rnanjala/Desktop/Polygenic_Risk_Scores/uganda.bed',
        '/Users/rnanjala/Desktop/Polygenic_Risk_Scores/uganda.bim',
        '/Users/rnanjala/Desktop/Polygenic_Risk_Scores/uganda.fam'],
    ]
}
